name: '[PRO][SONARCLOUD]'

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Disable shallow clones for better analysis relevance

      # Step 2: Set up JDK 21 with the Zulu distribution
      - name: 🏗️ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'  # Alternative distributions are available

      # Step 3: Cache SonarQube packages to speed up builds
      - name: 💾 Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Step 4: Cache Gradle dependencies to optimize build times
      - name: 💾 Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant Execute Permissions to Gradle Wrapper
        run: chmod +x gradlew

      # Step 5: Build the project and run SonarQube analysis
      - name: 📊 Build and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # SonarQube authentication token from GitHub Secrets
        run: ./gradlew build sonar --info
